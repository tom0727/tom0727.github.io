<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>算法 on tom0727's blog</title><link>https://tom0727.github.io/categories/%E7%AE%97%E6%B3%95/</link><description>Recent content in 算法 on tom0727's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 18 Mar 2021 10:53:51 +0800</lastBuildDate><atom:link href="https://tom0727.github.io/categories/%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>数位DP</title><link>https://tom0727.github.io/post/033-%E6%95%B0%E4%BD%8Ddp/</link><pubDate>Thu, 18 Mar 2021 10:53:51 +0800</pubDate><guid>https://tom0727.github.io/post/033-%E6%95%B0%E4%BD%8Ddp/</guid><description>介绍 数位DP是指这样一类题型： 给定一些限定条件，求 $[L,R]$ 内满足这些条件的数字数量，一般 $L,R$ 可能非常大（例如$10^{18}, 10^{1000}$）</description></item><item><title>树上启发式合并（DSU on Tree）</title><link>https://tom0727.github.io/post/031-%E6%A0%91%E4%B8%8A%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/</link><pubDate>Mon, 15 Mar 2021 20:53:14 +0800</pubDate><guid>https://tom0727.github.io/post/031-%E6%A0%91%E4%B8%8A%E5%90%AF%E5%8F%91%E5%BC%8F%E5%90%88%E5%B9%B6/</guid><description>介绍 树上启发式合并 一般用于 满足以下条件的问题： 所有询问离线，无修改，仅询问子树的信息（不能用于链的询问） $ans[u]$ 可以转化为 $\sum\limits_{v}ans[v]$ 的形式（其中，$v$ 是</description></item><item><title>数论分块</title><link>https://tom0727.github.io/post/027-%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97/</link><pubDate>Wed, 10 Mar 2021 15:49:46 +0800</pubDate><guid>https://tom0727.github.io/post/027-%E6%95%B0%E8%AE%BA%E5%88%86%E5%9D%97/</guid><description>介绍 数论分块一般用于解决 含有 $\lfloor \frac{N}{i} \rfloor$ 的求和问题。 数论分块主要利用了 $\lfloor \frac{N}{i} \rfloor$ 的取值范围相当有限的特点，所以有 $$i \leq j, ~\lfloor \frac{N}{i} \rfloor = \lfloor \frac{N}{j} \rfloor$$ 这样一些求和问题就</description></item><item><title>莫队</title><link>https://tom0727.github.io/post/024-%E8%8E%AB%E9%98%9F/</link><pubDate>Sun, 07 Mar 2021 21:50:41 +0800</pubDate><guid>https://tom0727.github.io/post/024-%E8%8E%AB%E9%98%9F/</guid><description>介绍 莫队算法是一种基于分块思想的暴力算法，一般应用于同时满足以下条件的区间问题中： 已知 $[L,R]$ 之间的答案，能在 $O(1)$ 时间内转移到 $[L+1,R], [L-1,R], [L,R+1], [L,R-1]$ 的答案。 所有询</description></item><item><title>树链剖分</title><link>https://tom0727.github.io/post/022-%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/</link><pubDate>Sat, 06 Mar 2021 15:58:27 +0800</pubDate><guid>https://tom0727.github.io/post/022-%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/</guid><description>介绍 树链剖分主要用于将 树上修改/查询 通过 DFS序 变成 区间修改/查询，然后利用 线段树 进行修改/查询。 我们可以用模版来举个例子： 题意 已知一棵包含</description></item><item><title>最近公共祖先 LCA</title><link>https://tom0727.github.io/post/021-lca/</link><pubDate>Sat, 06 Mar 2021 11:57:25 +0800</pubDate><guid>https://tom0727.github.io/post/021-lca/</guid><description>介绍 给定一棵有根树（不一定为binary tree），求两个节点的最近公共祖先？ 算法 LCA的思路和ST表比较相似，都是利用了倍增思想，大概流程</description></item><item><title>三分法</title><link>https://tom0727.github.io/post/020-%E4%B8%89%E5%88%86%E6%B3%95/</link><pubDate>Fri, 05 Mar 2021 22:20:54 +0800</pubDate><guid>https://tom0727.github.io/post/020-%E4%B8%89%E5%88%86%E6%B3%95/</guid><description>介绍 三分法 (tenary search) 和 二分法(binary search) 类似，只不过三分法可以用于搜索一个 二次函数 的最值。 以搜索二次函数最值为例，假如有一个二次函数存在最大值</description></item><item><title>组合数学</title><link>https://tom0727.github.io/post/017-%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/</link><pubDate>Tue, 02 Mar 2021 18:35:43 +0800</pubDate><guid>https://tom0727.github.io/post/017-%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/</guid><description>记录一些组合数学的公式。 公式 组合数 $C(n,m)$ $C_n^0 = C_n^n = 1$ $C_n^k = C_{n-1}^k + C_{n-1}^{k-1}$ $C_n^k = \frac{n!}{k!(n-k)!}$ 注：$0! = 1, (0!)^{-1} = 1$ 证明公式2 $n$ 个中选 $k$ 个， 考虑 $n$ 个元素中的第一个元素： 如果它</description></item><item><title>最小环</title><link>https://tom0727.github.io/post/013-%E6%9C%80%E5%B0%8F%E7%8E%AF/</link><pubDate>Thu, 25 Feb 2021 23:41:02 +0800</pubDate><guid>https://tom0727.github.io/post/013-%E6%9C%80%E5%B0%8F%E7%8E%AF/</guid><description>定义 最小环：指图中的一个环，它不包含任何更小的环。 在无向图中，最小的最小环为3个节点。在有向图中，最小的最小环为2个节点。（不考虑self-</description></item><item><title>树形dp</title><link>https://tom0727.github.io/post/008-%E6%A0%91%E5%BD%A2dp/</link><pubDate>Thu, 18 Feb 2021 15:42:09 +0800</pubDate><guid>https://tom0727.github.io/post/008-%E6%A0%91%E5%BD%A2dp/</guid><description>介绍 树形dp就是在树上进行dp，常用于 &amp;ldquo;树上选一组点/边，满足某些条件，且使得某些权值和最大&amp;rdquo; 的问题。 树形dp实现过</description></item><item><title>01分数规划</title><link>https://tom0727.github.io/post/007-01%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/</link><pubDate>Wed, 17 Feb 2021 17:20:49 +0800</pubDate><guid>https://tom0727.github.io/post/007-01%E5%88%86%E6%95%B0%E8%A7%84%E5%88%92/</guid><description>介绍 01分数规划用于 求一个分式的极值 例如： 给定 $a_i, b_i$，选出一组$i$， 使得 $\frac{\sum a_i}{\sum b_i}$ 最大/最小？ 方法 (二分) 一般使用二分答案的方法进行求解，</description></item><item><title>欧拉函数</title><link>https://tom0727.github.io/post/004-euler-function/</link><pubDate>Sat, 06 Feb 2021 17:23:34 +0800</pubDate><guid>https://tom0727.github.io/post/004-euler-function/</guid><description>定义 给定正整数$n$，求$\varphi(n)$， 即 小于等于$n$ 且 与$n$互质 的正整数个数。 性质 $\varphi(p) = p-1, ~\forall \text{prime } p$ $\varphi(mn) = \varphi(m)\varphi(n) \iff \gcd(m,n) = 1$ $\varphi(p^k) = p^k - p^{k-1} = p^k(1-\frac{1}{p})$</description></item><item><title>中国剩余定理介绍</title><link>https://tom0727.github.io/post/003-crt/</link><pubDate>Sat, 06 Feb 2021 10:46:42 +0800</pubDate><guid>https://tom0727.github.io/post/003-crt/</guid><description>中国剩余定理 (crt) 定义 给定方程组： $$\begin{cases} x\equiv a_1 (\text{mod }m_1) \\ x\equiv a_2 (\text{mod }m_2) \\ &amp;hellip; \\ x\equiv a_k (\text{mod }m_k) \\ \end{cases}$$ 其中 $a_i \geq 0, m_i &amp;gt; 0, a_i,m_i \in \mathbb{Z}$, 且 $m_i$ 之间两两互质。 求满足条件的最小非负整数解 $x$ ？ 结</description></item></channel></rss>